{"version":3,"sources":["../../node_modules/@super-effective/colorutils/dist/colorutils.es.js","../../src/common/util.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/ReactColorPicker.js","containers/dashboard.js"],"names":["sanitizeHex","colorHex","sanitizedHex","replace","length","repeat","concat","substr","hexToHsv","_hexToRgb","Error","rgb","parseInt","Number","isNaN","red","green","blue","hexToRgb","redPercent","greenPercent","bluePercent","max","Math","min","diff","hue","saturation","value","hsvToHex","_hsvToRgb","huePercent","i","floor","f","p","q","t","round","hsvToRgb","toString","slice","rgbToHex","getPagePosition","element","left","top","currentElement","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ReactColorPicker","className","color","showHex","showSwatch","onChange","onInteractionStart","onInteractionEnd","rest","sanitizedColor","useState","hex","setHex","hsv","setHsv","tempHex","setTempHex","isInteracting","setIsInteracting","hsvRef","useRef","hexRef","hueSliderRef","svSliderRef","setColor","updatedHex","updatedHsv","setColorFromHsv","setColorFromHex","onHexChange","useEffect","updateSaturationValue","useCallback","svPosition","updatedSaturationValue","x","y","width","height","percentageX","percentageY","getSaturationValueFromPosition","evt","updateHue","huePosition","updatedHue","percentage","getHueFromPosition","onPointerDown","onPointerUp","onSvPointerDown","onSvMove","onHuePointerDown","onHueMove","onMouseDown","onMouseUp","onSvMouseDown","onHueMouseDown","hueColor","svInteractionCallbacks","window","onPointerMove","onMouseMove","hueInteractionCallbacks","styles","backgroundColor","title","onBlur","onKeyDown","PropTypes","func","cookies","Cookies","React","memo","appthemecolor","history","useHistory","dispatch","useDispatch","notinumber","setnotinumber","noti","setnoti","user","setuser","useraccess","setuseraccess","abc","setabc","useracc","get","path","notinum","useSelector","state","userinfo","currentUser","useContext","BgThemeContext","appcolor","changeAppTheme","M","AutoInit","console","log","CURRENT_USER_GET","changee","a","axios","push","logout","remove","class","href","data-target","id","onClick","marginLeft","updatedColor"],"mappings":"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","file":"static/js/5.5b7fbf13.chunk.js","sourcesContent":["/* eslint-disable no-bitwise */\n\n/**\n * @typedef {Object} Rgb\n * @property {number} red - The red component of the color (0 - 255)\n * @property {number} green - The green component of the color (0 - 255)\n * @property {number} blue - The blue component of the color (0 - 255)\n */\n\n/**\n * @typedef {Object} Hsv\n * @property {number} hue - The hue of the color (0 - 360)\n * @property {number} saturation - The saturation the color (0.0 - 1.0)\n * @property {number} value - The value of the color (0.0 - 1.0)\n */\n\n/**\n * Removes invalid characters and formats color hex to 6 characters\n * @param {string} colorHex The color value in hex format to sanitize\n */\nfunction sanitizeHex(colorHex) {\n  var sanitizedHex = colorHex.replace(/[^a-fA-F0-9]/g, '');\n\n  if (sanitizedHex.length === 0) {\n    sanitizedHex = '000000';\n  } else if (sanitizedHex.length === 1) {\n    sanitizedHex = sanitizedHex[0].repeat(6);\n  } else if (sanitizedHex.length === 2) {\n    sanitizedHex = \"\".concat(sanitizedHex[0].repeat(3)).concat(sanitizedHex[1].repeat(3));\n  } else if (sanitizedHex.length >= 3 && sanitizedHex.length < 6) {\n    sanitizedHex = \"\".concat(sanitizedHex[0].repeat(2)).concat(sanitizedHex[1].repeat(2)).concat(sanitizedHex[2].repeat(2));\n  } else if (sanitizedHex.length > 6) {\n    sanitizedHex = sanitizedHex.substr(0, 6);\n  }\n\n  return \"#\".concat(sanitizedHex);\n}\n/**\n * Converts a hex color string to its red, green, and blue component values\n * @param {string} colorHex The color value in hex format\n * @returns {Rgb} The RGB values for the color\n */\n\nfunction hexToRgb(colorHex) {\n  var sanitizedHex = colorHex.replace(/[^a-fA-F0-9]/g, '');\n\n  if (sanitizedHex.length !== 6 && sanitizedHex.length !== 3) {\n    throw new Error(\"Color should be either 3 or 6 characters in length - received a length of \".concat(sanitizedHex.length));\n  }\n\n  if (sanitizedHex.length === 3) {\n    sanitizedHex = \"\".concat(sanitizedHex[0].repeat(2)).concat(sanitizedHex[1].repeat(2)).concat(sanitizedHex[2].repeat(2));\n  }\n\n  var rgb = parseInt(sanitizedHex, 16);\n\n  if (Number.isNaN(rgb)) {\n    throw new Error(\"Unable to parse hex color \".concat(colorHex));\n  }\n\n  var red = rgb >> 16 & 0xff;\n  var green = rgb >> 8 & 0xff;\n  var blue = rgb & 0xff;\n  return {\n    red: red,\n    green: green,\n    blue: blue\n  };\n}\n/**\n * Takes given hue, saturation and value and returns the respective RGB values\n * @param {number} hue The hue of the color (0.0 - 1.0)\n * @param {number} saturation The saturation of the color (0.0 - 1.0)\n * @param {number} value The value of the color (0.0 - 1.0)\n * @returns {Rgb} The RGB values for the color\n */\n\nfunction hsvToRgb(hue, saturation, value) {\n  // Bounds check\n  if (hue < 0 || hue > 360 || saturation < 0 || saturation > 1 || value < 0 || value > 1) {\n    throw new Error('Invalid hue, saturation, or value - all values must be between 0 and 1');\n  }\n\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n  var huePercent = hue / 360;\n  var i = Math.floor(huePercent * 6);\n  var f = huePercent * 6 - i;\n  var p = value * (1 - saturation);\n  var q = value * (1 - f * saturation);\n  var t = value * (1 - (1 - f) * saturation);\n\n  switch (i % 6) {\n    case 0:\n      {\n        red = value;\n        green = t;\n        blue = p;\n        break;\n      }\n\n    case 1:\n      {\n        red = q;\n        green = value;\n        blue = p;\n        break;\n      }\n\n    case 2:\n      {\n        red = p;\n        green = value;\n        blue = t;\n        break;\n      }\n\n    case 3:\n      {\n        red = p;\n        green = q;\n        blue = value;\n        break;\n      }\n\n    case 4:\n      {\n        red = t;\n        green = p;\n        blue = value;\n        break;\n      }\n\n    case 5:\n      {\n        red = value;\n        green = p;\n        blue = q;\n        break;\n      }\n  }\n\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n  return {\n    red: red,\n    green: green,\n    blue: blue\n  };\n}\n/**\n * Converts a hex color string to its hue, saturation, and value\n * @param {string} colorHex The color value in hex format\n * @returns {Hsv} The HSV values for the color\n */\n\nfunction hexToHsv(colorHex) {\n  // Hex validation handled by hexToRgb\n  var _hexToRgb = hexToRgb(colorHex),\n      red = _hexToRgb.red,\n      green = _hexToRgb.green,\n      blue = _hexToRgb.blue;\n\n  var redPercent = red / 255;\n  var greenPercent = green / 255;\n  var bluePercent = blue / 255;\n  var max = Math.max(redPercent, greenPercent, bluePercent);\n  var min = Math.min(redPercent, greenPercent, bluePercent);\n  var diff = max - min;\n  var hue = 0;\n  var saturation = max === 0 ? 0 : diff / max;\n  var value = max;\n\n  if (min === max) ; else {\n    switch (max) {\n      case redPercent:\n        {\n          hue = (greenPercent - bluePercent) / diff + (greenPercent < bluePercent ? 6 : 0);\n          break;\n        }\n\n      case greenPercent:\n        {\n          hue = (bluePercent - redPercent) / diff + 2;\n          break;\n        }\n\n      case bluePercent:\n        {\n          hue = (redPercent - greenPercent) / diff + 4;\n          break;\n        }\n    }\n\n    hue /= 6;\n    hue *= 360;\n  }\n\n  return {\n    hue: hue,\n    saturation: saturation,\n    value: value\n  };\n}\n/**\n * Takes given red, green, and blue values and returns the hex color representation\n * @param {number} red The red component of the color (0 - 255)\n * @param {number} green The green component of the color (0 - 255)\n * @param {number} blue The blue component of the color (0 - 255)\n * @returns {string} The hex string representation of the color\n */\n\nfunction rgbToHex(red, green, blue) {\n  var rgb = blue | green << 8 | red << 16;\n  return \"#\".concat((0x1000000 + rgb).toString(16).slice(1));\n}\n/**\n * Takes given hue, saturation and value and returns the hex color representation\n * @param {number} hue The hue of the color (0.0 - 1.0)\n * @param {number} saturation The saturation of the color (0.0 - 1.0)\n * @param {number} value The value of the color (0.0 - 1.0)\n * @returns {string} The hex string representation of the color\n */\n\nfunction hsvToHex(hue, saturation, value) {\n  // Bounds check handled by hsvToRgb\n  var _hsvToRgb = hsvToRgb(hue, saturation, value),\n      red = _hsvToRgb.red,\n      green = _hsvToRgb.green,\n      blue = _hsvToRgb.blue;\n\n  return rgbToHex(red, green, blue);\n}\n/**\n * Get the perceived brightness of a given color\n * See: https://www.w3.org/TR/AERT/#color-contrast\n * @param {number} red The red component of the color (0 - 255)\n * @param {number} green The green component of the color (0 - 255)\n * @param {number} blue The blue component of the color (0 - 255)\n * @returns {number} The perceived brightness of the color (0.0 - 1.0)\n */\n\nfunction getPerceivedLuminance(red, green, blue) {\n  return (red * 0.299 + green * 0.587 + blue * 0.114) / 255;\n}\n\nexport { getPerceivedLuminance, hexToHsv, hexToRgb, hsvToHex, hsvToRgb, rgbToHex, sanitizeHex };\n//# sourceMappingURL=colorutils.es.js.map\n","/**\n * @typedef {Object} Event\n * @property {Object} target The target element of the event\n */\n\n/**\n * @typedef {Object} Element\n * @property {number} offsetLeft The left offset of the element\n * @property {number} offsetTop The top offset of the element\n * @property {Element} offsetParent The parent element the offset is relative to\n * @property {Element} parentElement The parent element\n */\n\n\n/**\n * Gets the page relative top/left position of an element\n * @param {Element} element The DOM element to get the page position of\n */\nexport function getPagePosition(element) {\n  let left = element.offsetLeft;\n  let top = element.offsetTop;\n\n  let currentElement = element;\n  while (currentElement.offsetParent) {\n    currentElement = currentElement.offsetParent;\n\n    left += currentElement.offsetLeft;\n    top += currentElement.offsetTop;\n  }\n\n  return {\n    left,\n    top,\n  };\n}\n\n/**\n * Sanitize and combine classNames to a single string\n * @param  {...string} classNames The classNames to combine\n */\nexport function getCombinedClassNames(...classNames) {\n  // Filter any null values\n  const filteredClassnames = classNames.filter((className) => (\n    typeof className === 'string' && className\n  ));\n\n  return (filteredClassnames.join(' '));\n}\n\n\n/**\n * Get the hue value from a given position on the hue slider\n * @param {number} x The x coordinate on the hue slider\n * @param {number} width The width of the hue slider\n */\nexport function getHueFromPosition(x, width) {\n  if (!width) {\n    return 0;\n  }\n\n  const percentage = x / width;\n  const hue = Math.max(Math.min(percentage, 1), 0) * 360;\n\n  return hue;\n}\n\n/**\n * Get the saturation and value from a given position on the SV slider\n * @param {number} x The x coordinate on the SV selector\n * @param {number} y The y coordinate on the SV selector\n * @param {number} width The width of the SV selector\n * @param {number} height The height of the SV selector\n */\nexport function getSaturationValueFromPosition(x, y, width, height) {\n  const percentageX = (!width) ? 0 : x / width;\n  const percentageY = (!height) ? 0 : 1 - (y / height);\n\n  const saturation = Math.max(Math.min(percentageX, 1), 0);\n  const value = Math.max(Math.min(percentageY, 1), 0);\n\n  return {\n    saturation,\n    value,\n  };\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { hsvToHex, hexToHsv, sanitizeHex } from '@super-effective/colorutils';\n\nimport {\n  getHueFromPosition,\n  getPagePosition,\n  getSaturationValueFromPosition,\n} from 'common/util';\n\nimport styles from './ReactColorPicker.module.scss';\n\nconst ReactColorPicker = ({\n  className,\n  color,\n  showHex,\n  showSwatch,\n\n  onChange,\n  onInteractionStart,\n  onInteractionEnd,\n\n  ...rest\n}) => {\n  const sanitizedColor = sanitizeHex(color || '#000000');\n\n  const [hex, setHex] = useState(sanitizedColor);\n  const [hsv, setHsv] = useState(hexToHsv(sanitizedColor));\n\n  // Used when editing the hex through the input\n  const [tempHex, setTempHex] = useState(hex);\n  const [isInteracting, setIsInteracting] = useState(false);\n\n  const hsvRef = useRef(hsv);\n  const hexRef = useRef(hex);\n\n  const hueSliderRef = useRef();\n  const svSliderRef = useRef();\n\n\n  // Set the hex and hsv states/refs with updated data\n  const setColor = (updatedHex, updatedHsv) => {\n    hexRef.current = updatedHex;\n    hsvRef.current = updatedHsv;\n\n    setHex(updatedHex);\n    setTempHex(updatedHex);\n    setHsv(updatedHsv);\n\n    onChange(updatedHex);\n  };\n\n  // Helper to set the color when HSV change\n  const setColorFromHsv = (updatedHsv) => {\n    setColor(\n      hsvToHex(updatedHsv.hue, updatedHsv.saturation, updatedHsv.value),\n      updatedHsv,\n    );\n  };\n\n  // Helper to set the color when hex changes\n  const setColorFromHex = (updatedHex) => {\n    setColor(updatedHex, hexToHsv(updatedHex));\n  };\n\n\n  // Event handler for hex input changes (on blur and enter pressed)\n  const onHexChange = (value) => {\n    // Strip out invalid characters\n    const sanitizedHex = sanitizeHex(value);\n\n    setColorFromHex(sanitizedHex);\n  };\n\n  // Update color when the passed value changes\n  useEffect(() => {\n    if (color !== hexRef.current && !isInteracting) {\n      const sanitizedHex = sanitizeHex(color || '#000000');\n      setColorFromHex(sanitizedHex);\n    }\n  }, [color]);\n\n  const updateSaturationValue = useCallback((evt) => {\n    const svPosition = getPagePosition(svSliderRef.current);\n    const x = evt.pageX - svPosition.left;\n    const y = evt.pageY - svPosition.top;\n\n    const updatedSaturationValue = getSaturationValueFromPosition(\n      x,\n      y,\n      svSliderRef.current.clientWidth,\n      svSliderRef.current.clientHeight,\n    );\n\n    setColorFromHsv({\n      ...hsvRef.current,\n      ...updatedSaturationValue,\n    });\n  }, []);\n\n  const updateHue = useCallback((evt) => {\n    const huePosition = getPagePosition(hueSliderRef.current);\n    const x = evt.pageX - huePosition.left;\n\n    const updatedHue = getHueFromPosition(x, hueSliderRef.current.clientWidth);\n\n    setColorFromHsv({ ...hsvRef.current, hue: updatedHue });\n  }, []);\n\n  // Setup pointer events for supported browsers for two reasons:\n  //   1. It allows for pointer capture which allows for continued\n  //      interaction even when the cursor/pointer outside of picker\n  //   2. It allows for unified code across devices (mobile and desktop)\n  const onPointerDown = useCallback((evt) => {\n    evt.target.setPointerCapture(evt.pointerId);\n    onInteractionStart();\n    setIsInteracting(true);\n  }, []);\n\n  const onPointerUp = useCallback((evt) => {\n    evt.target.releasePointerCapture(evt.pointerId);\n    onInteractionEnd();\n    setIsInteracting(false);\n  }, []);\n\n  const onSvPointerDown = useCallback((evt) => {\n    onPointerDown(evt);\n    updateSaturationValue(evt);\n  }, []);\n\n  const onSvMove = useCallback((evt) => {\n    if (isInteracting) {\n      updateSaturationValue(evt);\n    }\n  }, [isInteracting]);\n\n  const onHuePointerDown = useCallback((evt) => {\n    onPointerDown(evt);\n    updateHue(evt);\n  }, []);\n\n  const onHueMove = useCallback((evt) => {\n    if (isInteracting) {\n      updateHue(evt);\n    }\n  }, [isInteracting]);\n\n  // Setup mouse and touch events as a fallback\n  const onMouseDown = useCallback(() => {\n    onInteractionStart();\n    setIsInteracting(true);\n  }, []);\n\n  const onMouseUp = useCallback(() => {\n    onInteractionEnd();\n    setIsInteracting(false);\n  }, []);\n\n  const onSvMouseDown = useCallback((evt) => {\n    onMouseDown(evt);\n    updateSaturationValue(evt);\n  }, []);\n\n  const onHueMouseDown = useCallback((evt) => {\n    onMouseDown(evt);\n    updateHue(evt);\n  }, []);\n\n  const {\n    hue,\n    saturation,\n    value,\n  } = hsv;\n\n  // Get the hex for the hue slider\n  const hueColor = hsvToHex(hue, 1, 1);\n\n  const svInteractionCallbacks = (window.PointerEvent)\n    ? {\n      onPointerDown: onSvPointerDown,\n      onPointerMove: onSvMove,\n      onPointerUp,\n    }\n    : {\n      onMouseDown: onSvMouseDown,\n      onMouseMove: onSvMove,\n      onMouseUp,\n    };\n\n  const hueInteractionCallbacks = (window.PointerEvent)\n    ? {\n      onPointerDown: onHuePointerDown,\n      onPointerMove: onHueMove,\n      onPointerUp,\n    }\n    : {\n      onMouseDown: onHueMouseDown,\n      onMouseMove: onHueMove,\n      onMouseUp,\n    };\n\n  return (\n    <div\n      className={`${styles.react_color_picker}${className ? ` ${className}` : ''}`}\n      {...rest}\n    >\n      <div\n          className={styles.saturation_value}\n          style={{\n            backgroundColor: hueColor,\n          }}\n          ref={svSliderRef}\n          title=\"Saturation and Value\"\n\n          {...svInteractionCallbacks}\n        >\n          <div\n            className={styles.saturation_value_picker}\n            style={{\n              left: `${saturation * 100}%`,\n              top: `${(1 - value) * 100}%`,\n              backgroundColor: hex,\n            }}\n          />\n        </div>\n\n        <div\n          className={styles.hue_slider}\n          ref={hueSliderRef}\n          title=\"Hue\"\n\n          {...hueInteractionCallbacks}\n        >\n          <div\n            className={styles.hue_slider_picker}\n            style={{\n              left: `${(hue / 360) * 100}%`,\n              backgroundColor: hueColor,\n            }}\n          />\n        </div>\n\n        {(showHex || showSwatch) && (\n          <div className={styles.details}>\n            {showSwatch && (\n              <div\n                className={styles.swatch}\n                style={{\n                  backgroundColor: hex,\n                }}\n                title=\"Swatch\"\n              />\n            )}\n            {showHex && (\n              <label>\n                <span>Hex:</span>\n                <input\n                  className={styles.hex_value}\n                  value={tempHex}\n                  onChange={(evt) => setTempHex(evt.target.value)}\n                  onBlur={(evt) => onHexChange(evt.target.value)}\n                  onKeyDown={(evt) => {\n                    if (evt.key === 'Enter') {\n                      onHexChange(evt.target.value);\n                    } else if (evt.key === 'Esc' || evt.key === 'Escape') {\n                      // eslint-disable-next-line no-param-reassign\n                      evt.target.value = hexRef.current;\n                      evt.target.blur();\n                    }\n                  }}\n                />\n              </label>\n            )}\n          </div>\n        )}\n    </div>\n  );\n};\n\nReactColorPicker.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  showSwatch: PropTypes.bool,\n  showHex: PropTypes.bool,\n\n  onChange: PropTypes.func,\n  onInteractionStart: PropTypes.func,\n  onInteractionEnd: PropTypes.func,\n};\n\nReactColorPicker.defaultProps = {\n  className: null,\n  color: '#3cd6bf',\n  showSwatch: true,\n  showHex: true,\n\n  onChange: () => {},\n  onInteractionStart: () => {},\n  onInteractionEnd: () => {},\n};\n\nexport default ReactColorPicker;\n","import React, { useEffect, useState,useContext } from 'react';\r\nimport M from 'materialize-css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport {CURRENT_USER_GET } from '../actions/objActions';\r\nimport ReactColorPicker from '@super-effective/react-color-picker';\r\nimport Cookies from 'universal-cookie';\r\nimport {BgThemeContext} from '../context/bgtheme'\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport '../styles/dashboard.css';\r\n\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\n\r\n\r\n\r\nfunction DashBoard() \r\n{\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    var color=\"orange\";\r\n\r\n    const[notinumber,setnotinumber] =useState(null);\r\n    const[noti,setnoti] =useState(false);\r\n    const[user,setuser]=useState(null);\r\n    const [useraccess,setuseraccess] = useState(false);\r\n    var appthemecolor;\r\n    const [abc,setabc]=useState(null);\r\n    var useracc = cookies.get('user',{ path: '/' })\r\n    var notinum= useSelector(state => state.noti);\r\n    var userinfo = useSelector(state => state.currentUser);\r\n\r\n   /*const {lightcolor,light,darkcolor,changeAppTheme} = useContext(BgThemeContext)\r\n   color = light==true? lightcolor : darkcolor;\r\n   console.log(\"light \" +light);*/\r\n\r\n   const {appcolor,changeAppTheme} = useContext(BgThemeContext);\r\n   color= appcolor || \"orange\";\r\n   \r\n    \r\n\r\n    useEffect(()=>{\r\n        M.AutoInit();\r\n        console.log(\"color is \" +  color);\r\n        dispatch({type:CURRENT_USER_GET})\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setuser(userinfo)\r\n        if(useracc==\"true\")\r\n        {\r\n            setuseraccess(true)\r\n        }\r\n        else{\r\n            setuseraccess(false)\r\n        }\r\n        \r\n        \r\n    },[userinfo])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"noti number : \"  +  notinum);\r\n        setnotinumber(notinum)\r\n        if(notinum==0)\r\n        {\r\n            setnoti(false);\r\n        }\r\n        else{\r\n            setnoti(true);\r\n        }\r\n        \r\n    },[notinum])\r\n   \r\n    \r\n    const changee = async () =>{\r\n        console.log(\"in changeee\");\r\n        \r\n        let em = await axios.get(\"https://workflow-app-01.herokuapp.com/clear/notification?eoid=\" + user);\r\n        //dispatch({type:CURRENT_USER,payload:{user,noti:0}})\r\n        dispatch({type:CURRENT_USER_GET})\r\n        history.push('/dashboard/employee')\r\n    }\r\n\r\n    const logout = () =>{\r\n      console.log(\"loggin out user\")\r\n      cookies.remove('jwt')\r\n      cookies.remove('user')\r\n      history.push('/login')\r\n    }\r\n\r\n    const onColorChange = (updatedColor) => {\r\n        //console.log(updatedColor);\r\n        appthemecolor=updatedColor;\r\n        setabc(updatedColor)\r\n    };\r\n\r\n    return (\r\n\r\n       <>\r\n       <div>\r\n           <div class=\"navbar-fixed\">\r\n                <nav className=\"nav wrapper\" style={{backgroundColor: \"rgb(14, 1, 59)\"}} >\r\n                    <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger hide-on-large-only\"><i class=\"material-icons\">menu</i></a>\r\n                    <a href=\"#\" class=\"brand-logo\"><i class=\"material-icons dashboard-logo\" style={{color:color}}>polymer</i>&nbsp;Work Hive</a>\r\n                    <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                        <li><a class=\"btn amber-1 waves-effect waves-orange\" style={{backgroundColor:color}} onClick={()=>{logout()}}>Logout</a></li> \r\n                        <li><a class=\"btn-floating waves-effect waves-light darken-1\" onClick={()=>{changee();}} style={{backgroundColor:color}}><i class=\"black-text material-icons\"  >notifications</i></a></li> \r\n                        {noti && <li><span class=\" white-text pink notification-badge\">{notinumber}</span></li>}\r\n                        <li><a class=\"btn-floating waves-effect waves-light modal-trigger\" href=\"#modalcolorpicker\" style={{backgroundColor:color}} ><i class=\"black-text material-icons\"  >color_lens</i></a></li> \r\n                        \r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n\r\n\r\n \r\n            <ul class=\"sidenav sidenav-fixed hide-on-small side-nav-db\" >\r\n                <li><a ><i class=\" darken-1 material-icons dashboard-icon\" style={{color:color}}>dashboard</i>DashBoard</a></li>\r\n\r\n                {useraccess &&   <li><a ><i class=\"darken-1 material-icons dashboard-icon\" style={{color:color}}>web_asset</i>Admin</a></li> }\r\n    {useraccess && <li><a onClick={()=>{history.push('/dashboard/adminemployee')}}  class=\"dashboard-sub-heading\"><span style={{marginLeft:\"25px\"}}>Employee</span></a></li> }\r\n    {useraccess && <li><a onClick={()=>{history.push('/dashboard/admindepartment')}} class=\"dashboard-sub-heading\"><span style={{marginLeft:\"25px\"}}>Department</span></a></li> }\r\n              \r\n     \r\n                <li><a ><i class=\"darken-1 material-icons dashboard-icon\" style={{color:color}}>insert_chart</i>Objectives</a></li>\r\n    {useraccess &&      <li><a  onClick={()=>{history.push('/dashboard/company')}} class=\"dashboard-sub-heading\"><span style={{marginLeft:\"25px\"}}>Company</span></a></li> }\r\n    {useraccess &&    <li><a  onClick={()=>{history.push('/dashboard/department')}} class=\"dashboard-sub-heading\"><span style={{marginLeft:\"25px\"}}>Department</span></a></li> }\r\n                <li><a  onClick={()=>{history.push('/dashboard/employee')}} class=\"dashboard-sub-heading\"><span style={{marginLeft:\"25px\"}}>Employee</span></a></li>\r\n\r\n            </ul>\r\n\r\n\r\n\r\n            <ul id=\"slide-out\" class=\"sidenav side-nav-db\">\r\n                <li><a ><i class=\" darken-1 material-icons dashboard-icon\" style={{color:color}}>dashboard</i>DashBoard</a></li>\r\n\r\n    {useraccess &&   <li><a ><i class=\"darken-1 material-icons dashboard-icon\" style={{color:color}}>web_asset</i>Admin</a></li> }\r\n    {useraccess &&   <li><a onClick={()=>{history.push('/dashboard/adminemployee')}}  class=\"dashboard-sub-heading\">Employee</a></li> }\r\n    {useraccess &&    <li><a onClick={()=>{history.push('/dashboard/admindepartment')}} class=\"dashboard-sub-heading\">Department</a></li> }\r\n              \r\n                <li><a ><i class=\"darken-1 material-icons dashboard-icon\" style={{color:color}}>insert_chart</i>Objectives</a></li>\r\n                {useraccess &&    <li><a  onClick={()=>{history.push('/dashboard/company')}} class=\"dashboard-sub-heading\">Company</a></li>}\r\n                {useraccess &&    <li><a  onClick={()=>{history.push('/dashboard/department')}} class=\"dashboard-sub-heading\">Department</a></li> }\r\n                <li><a  onClick={()=>{history.push('/dashboard/employee')}} class=\"dashboard-sub-heading\">Employee</a></li>\r\n                <li><a  onClick={()=>{logout()}} class=\"dashboard-sub-heading\" style={{color:color}}>Logout</a></li>\r\n            </ul>\r\n            </div>\r\n\r\n            <div id=\"modalcolorpicker\" class=\"modal\">\r\n                <div class=\"modal-content\">\r\n                    <h6>Choose App Theme Color</h6>\r\n                    <br/>\r\n                    <ReactColorPicker color={appthemecolor} onChange={onColorChange}/>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button class=\"modal-close waves-effect waves-green btn-flat\"  style={{backgroundColor:color}}  onClick={()=>{console.log(\"hey\" + abc);changeAppTheme(abc)}}>Change Theme</button>\r\n                </div>\r\n            </div>\r\n          </>  \r\n       \r\n        \r\n        \r\n        \r\n\r\n       /* <>\r\n        <nav className=\"nav wrapper black\">\r\n            \r\n            <a href=\"#\" class=\"brand-logo\"><img src={logo} height=\"34px\" width=\"35px\" style={{marginBottom:\"-4px\",marginLeft:\"10px\"}} />&nbsp;Work Hive</a>\r\n            <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                <li><a class=\"btn amber darken-1\">Logout</a></li> \r\n            </ul>\r\n        \r\n        </nav>\r\n\r\n            <div class=\"row\">\r\n                \r\n                <div class=\"col s3\">\r\n                    <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\r\n                        <li><a ><i class=\"amber-text darken-1 material-icons\" style={{marginRight:\"4px\" ,fontSize:\"20px\"}}>dashboard</i>DashBoard</a></li>\r\n                        <li><a ><i class=\"amber-text darken-1 material-icons\">web_asset</i>Admin</a></li>\r\n                        <li><a>Company</a></li>\r\n                        <li><a>Department</a></li>\r\n                        <li><a ><i class=\" amber-text darken-1 material-icons\">insert_chart</i>Objectives</a></li>\r\n                        <li><a><i class=\" amber-text darken-1 material-icons\">chrome_reader_mode </i>PMS</a></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div class=\"col s9\">\r\n                  \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </>\r\n\r\n        \r\n        <>\r\n        <nav className=\"nav wrapper black\">\r\n            \r\n                <a href=\"#\" class=\"brand-logo\"><img src={logo} height=\"34px\" width=\"35px\" style={{marginBottom:\"-4px\",marginLeft:\"10px\"}} />&nbsp;Work Hive</a>\r\n                <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                    <li><a class=\"btn amber darken-1\">Logout</a></li> \r\n                </ul>\r\n            \r\n        </nav>\r\n        \r\n        <div className=\"row\">\r\n            <div className=\"col l2 side-bar-nav\"> \r\n                <ul>\r\n                    <h5 className=\"sidebar-heading\"><i class=\"amber-text darken-1 material-icons\">dashboard</i>&nbsp;Dash Board</h5>\r\n\r\n                    <h5 className=\"sidebar-heading\"><i class=\"amber-text darken-1 material-icons\">web_asset</i>&nbsp;Admin</h5>\r\n                    \r\n\r\n                    <h5 className=\"sidebar-heading\"><i class=\" amber-text darken-1 material-icons\">insert_chart</i>&nbsp;Objectives</h5>\r\n                    <button class=\"sidebar-nav-btn\" onClick={()=>{setInfoPanel(<Company/>)}} > Company</button>\r\n                    <button class=\"sidebar-nav-btn\" onClick={()=>{setInfoPanel(<Department/>)}} > Department</button>\r\n\r\n                    <h5 className=\"sidebar-heading\"><i class=\" amber-text darken-1 material-icons\">chrome_reader_mode </i>&nbsp;PMS</h5>\r\n                    \r\n\r\n                    \r\n                </ul>\r\n            </div>\r\n            <div class=\"col l1\"></div>\r\n            <div className=\"col l8\" style={{height:\"1400px\"}}>\r\n                {infoPanel}\r\n            </div>\r\n        </div>\r\n        </>*/\r\n    );\r\n}\r\n\r\nexport default React.memo(DashBoard);\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n\r\n    \r\n                       \r\n<ul class=\"sidenav sidenav-fixed hide-on-small side-nav-db\" >\r\n    <li><a ><i class=\" darken-1 material-icons dashboard-icon\" style={{color:color}}>dashboard</i>DashBoard</a></li>\r\n\r\n    <li><a ><i class=\"darken-1 material-icons dashboard-icon\" style={{color:color}}>web_asset</i>Admin</a></li>\r\n    <li><Link to=\"/dashboard/adminemployee\"><a class=\"dashboard-sub-heading\">Employee</a></Link></li>\r\n    <li><a  class=\"dashboard-sub-heading\">Department</a></li>\r\n    <li><a  class=\"dashboard-sub-heading\">Roles & Permissions</a></li>\r\n    <li><a  class=\"dashboard-sub-heading\">Master Data</a></li>\r\n\r\n    <li><a ><i class=\"darken-1 material-icons dashboard-icon\" style={{color:color}}>insert_chart</i>Objectives</a></li>\r\n    <li><Link to=\"/dashboard/company\"><a class=\"dashboard-sub-heading\">Company</a></Link></li>\r\n    <li><Link to=\"/dashboard/department\"><a class=\"dashboard-sub-heading\">Department</a></Link></li>\r\n    <li><Link to=\"/dashboard/employee\"><a class=\"dashboard-sub-heading\">Employee</a></Link></li>\r\n\r\n    <li><a><i class=\"darken-1 material-icons dashboard-icon\" style={{color:color}}>chrome_reader_mode </i>PMS</a></li>\r\n</ul>\r\n\r\n\r\n*/}"],"sourceRoot":""}