{"version":3,"sources":["reducers/rootReducer.js","sagas/saga.js","sagas/rootsaga.js","index.js"],"names":["initState","companyObjectives","deptObjectives","employeeDetails","noti","currentUser","departmentInfo","rootReducer","state","action","console","log","type","refreshedCObj","payload","co","refreshedDObj","dobj","refreshedDObj1","employeeDetails1","user","getCO","watchCO","getDO","watchDO","getED","watchED","getCU","watchCU","getAD","watchAD","cookies","Cookies","call","axios","get","res","data","objectiveList","res1","put","takeEvery","emp","jwt","deptinfo","rootSaga","all","App","React","lazy","sagaMiddleWare","saga","store","createStore","applyMiddleware","run","loader","class","style","marginTop","width","marginLeft","ReactDOM","render","StrictMode","fallback","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2641e44a.chunk.js","sourcesContent":["// redux saga\r\n\r\nconst initState = {\r\n    companyObjectives : [],\r\n    deptObjectives:[],\r\n    employeeDetails:[],\r\n    noti:0,\r\n    currentUser:null,\r\n    departmentInfo:[]\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  console.log(action.type)\r\n  if(action.type === 'REFRESH_CO')\r\n    {\r\n        //console.log(\"refreshing\")\r\n        var refreshedCObj = action.payload.co;\r\n        //console.log(action.payload.co);\r\n        var refreshedDObj = action.payload.dobj;\r\n        return {\r\n            ...state,\r\n            companyObjectives : refreshedCObj,\r\n            deptObjectives:refreshedDObj\r\n        }\r\n    }\r\n    if(action.type === 'REFRESH_DO')\r\n    {\r\n       // console.log(\"refreshing dept\")\r\n        var refreshedDObj1 = action.payload\r\n        return {\r\n            ...state,\r\n            deptObjectives:refreshedDObj1\r\n        }\r\n    }\r\n    if(action.type === 'REFRESH_ED')\r\n    {\r\n        //console.log(\"refreshing emp\")\r\n        var employeeDetails1 =  action.payload\r\n        return {\r\n            ...state,\r\n            employeeDetails:employeeDetails1\r\n        }\r\n    }\r\n    if(action.type === 'CURRENT_USER')\r\n    {\r\n        return {\r\n            ...state,\r\n            currentUser:action.payload.user,\r\n            noti:action.payload.noti\r\n        }\r\n    }\r\n\r\n    if(action.type === 'REFRESH_ADMIN_DEPT')\r\n    {\r\n        return {\r\n            ...state,\r\n            departmentInfo: action.payload\r\n        }\r\n    }\r\n\r\n\r\n    //console.log(\"storeee\");\r\n    return state;\r\n}\r\n\r\n\r\nexport default rootReducer;\r\n\r\n\r\n//redux\r\n\r\n/*\r\n\r\nimport axios from 'axios';\r\n\r\nfunction getCompanyObjectives()\r\n{\r\n    console.log(\"in  compnay reducer\");\r\n    var objdata=null;\r\n    var res = axios.get(\"/objectives/company/get\")\r\n    .then(details=> {\r\n        objdata= details.data.objectiveList;\r\n        return objdata\r\n    }).catch(error=>{\r\n         console.log(error);\r\n    });\r\n    //console.log(res);\r\n    return res;\r\n}\r\n\r\n\r\nfunction getEmployeeDetails()\r\n{\r\n    console.log(\"in emp reducer\")\r\n    var empdata=null;\r\n    var res = axios.get(\"/objectives/employee/get\")\r\n    .then(details=> {\r\n        empdata= details.data.emp;\r\n        return empdata\r\n        \r\n    }).catch(error=>{\r\n         console.log(error);\r\n    });\r\n    return res;\r\n}\r\n\r\n\r\nfunction getDepartmentObjectives() {\r\n    console.log(\"in dept reducer\")\r\n    var deptdata=null;\r\n    var res = axios.get(\"/objectives/department/get\")\r\n    .then(details=> {\r\n        deptdata= details.data.objectiveList;\r\n        console.log(deptdata);\r\n        return deptdata\r\n        \r\n    }).catch(error=>{\r\n         console.log(error);\r\n    });\r\n    return res;\r\n}\r\n\r\n\r\nconst initState = {\r\n    companyObjectives : getCompanyObjectives(),\r\n    deptObjectives: getDepartmentObjectives(),\r\n    employeeDetails :  getEmployeeDetails()\r\n}\r\n\r\nconst rootReducer = (state =  initState , action) =>\r\n{\r\n    if(action.type === 'REFRESH')\r\n    {\r\n        console.log(\"refreshing\")\r\n        var refreshedCObj = getCompanyObjectives();\r\n        var refreshedDObj = getDepartmentObjectives();\r\n        return {\r\n            ...state,\r\n            companyObjectives : refreshedCObj,\r\n            deptObjectives:refreshedDObj\r\n        }\r\n    }\r\n    if(action.type === 'REFRESH_DEPT')\r\n    {\r\n        console.log(\"refreshing dept\")\r\n        var refreshedDObj1 = getDepartmentObjectives();\r\n        return {\r\n            ...state,\r\n            deptObjectives:refreshedDObj1\r\n        }\r\n    }\r\n    if(action.type === 'REFRESH_EMP')\r\n    {\r\n        console.log(\"refreshing emp\")\r\n        var employeeDetails1 =  getEmployeeDetails()\r\n        return {\r\n            ...state,\r\n            employeeDetails:employeeDetails1\r\n        }\r\n    }\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default rootReducer;*/\r\n","import { takeEvery,call,put} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nfunction* getCO() {\r\n    try {\r\n      console.log('heyyy')\r\n      // data is obtained after axios call is resolved\r\n      let res = yield call(() =>  axios.get('https://workflow-app-01.herokuapp.com/objectives/company/get'));\r\n      let co = res.data.objectiveList;\r\n      console.log(co);\r\n      let res1 = yield call(() => axios.get('https://workflow-app-01.herokuapp.com/objectives/department/get'));\r\n      let dobj = res1.data.objectiveList;\r\n\r\n      // dispatch action to change redux state\r\n      yield put({type:\"REFRESH_CO\" , payload : {co, dobj}});\r\n     \r\n    } catch (e) {\r\n      // catch error on a bad axios call\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n//watcher function - watches for actions\r\nexport  function* watchCO() {\r\n    console.log(\"watcher function CO\")\r\n    yield takeEvery('REFRESH', getCO);\r\n    //yeild takeEvery('REFRESH);\r\n    //call(getCO);\r\n}\r\n\r\n\r\n\r\nfunction* getDO() {\r\n    try {\r\n      // data is obtained after axios call is resolved\r\n      let { data } = yield call(() => axios.get('https://workflow-app-01.herokuapp.com/objectives/department/get'));\r\n      \r\n      // dispatch action to change redux state\r\n      yield put({type:\"REFRESH_DO\" , payload : data.objectiveList});\r\n     \r\n    } catch (e) {\r\n      // catch error on a bad axios call\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n//watcher function - watches for actions\r\nexport  function* watchDO() {\r\n    console.log(\"watcher function DO\")\r\n    yield takeEvery('REFRESH_DEPT', getDO);\r\n}\r\n\r\n\r\n\r\nfunction* getED() {\r\n    try {\r\n      // data is obtained after axios call is resolved\r\n      let { data } = yield call(() => axios.get('https://workflow-app-01.herokuapp.com/objectives/employee/get'));\r\n      console.log(\"getED\");\r\n      console.log(data.emp);\r\n      // dispatch action to change redux state\r\n      yield put({type:\"REFRESH_ED\" , payload : data.emp});\r\n     \r\n    } catch (e) {\r\n      // catch error on a bad axios call\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n//watcher function - watches for actions\r\nexport  function* watchED() {\r\n    console.log(\"watcher function\")\r\n    yield takeEvery('REFRESH_EMP', getED);\r\n}\r\n\r\n//get current user\r\nfunction* getCU() {\r\n  try {\r\n    // data is obtained after axios call is resolved\r\n    let jwt = cookies.get('jwt')\r\n    let { data } = yield call(() => axios.get('https://workflow-app-01.herokuapp.com/get/current/employee?jwt='+jwt));\r\n    \r\n    // dispatch action to change redux state\r\n    yield put({type:\"CURRENT_USER\" , payload : {user:data.user, noti:data.noti}});\r\n   \r\n  } catch (e) {\r\n    // catch error on a bad axios call\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nexport  function* watchCU() {\r\n  console.log(\"watcher function user details\")\r\n  yield takeEvery('CURRENT_USER_GET', getCU);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//get current user\r\nfunction* getAD() {\r\n  try {\r\n    // data is obtained after axios call is resolved\r\n    let { data } = yield call(() => axios.get('https://workflow-app-01.herokuapp.com/admin/deptartment/get'));\r\n    \r\n    // dispatch action to change redux state\r\n    yield put({type:\"REFRESH_ADMIN_DEPT\" , payload :data.deptinfo});\r\n   \r\n  } catch (e) {\r\n    // catch error on a bad axios call\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nexport  function* watchAD() {\r\n  console.log(\"watcher function user details\")\r\n  yield takeEvery('REFRESH_AD', getAD);\r\n}","import { all } from 'redux-saga/effects';\r\nimport {watchCO, watchDO,watchED,watchCU,watchAD}   from './saga';\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchCO(),\r\n    watchDO(),\r\n    watchED(),\r\n    watchCU(),\r\n    watchAD()\r\n  ]);\r\n}"," \nimport React  from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore,applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport { Suspense, lazy } from 'react';\nimport rootReducer from './reducers/rootReducer'\nimport saga from 'redux-saga';\nimport rootSaga from './sagas/rootsaga';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport {reactLocalStorage} from 'reactjs-localstorage';\n//reactLocalStorage.set('color', \"orange\");\n\n\nconst App = React.lazy(() => import('./App'));\n\nconst sagaMiddleWare = saga();\n\nconst store = createStore(rootReducer,applyMiddleware(sagaMiddleWare));\nsagaMiddleWare.run(rootSaga);\n\n\nconst loader = \n<div class=\"progress amber lighten-4\" style={{marginTop:\"300px\",width:\"300px\",marginLeft:\"500px\"}}>\n  <div class=\"indeterminate amber darken-1\" ></div>\n</div>;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={loader}>\n          <HashRouter  basename='/' >\n            <Provider store={store}><App /></Provider>\n          </HashRouter>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}